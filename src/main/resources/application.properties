spring.application.name=metamapa-client

server.port=8080

# mi backend
backend.url=${BACKEND_URL:http://localhost:9000}

# Base URL del backend real cuando usemos modo "api"
# Sobrescribible con BACKEND_URL
#metamapa.backend.base-url=${BACKEND_URL:http://localhost:9000}

# Thymeleaf
# dev cómodo
spring.thymeleaf.cache=false
#spring.thymeleaf.prefix=classpath:/templates/
#logging.level.org.thymeleaf=DEBUG

#spring.profiles.active=mock
spring.profiles.active=dev
#Cuando conecte el backend 'real'
#spring.profiles.active=real

api.servicioAgregador.url=https://localhost:3000
# Remember-me (cookies)
# Usar una clave random larga (ej.: 32 chars). En prod: guardarla como secreto
mm.remember.secret=${REMEMBER_SECRET:una-clave-larga-y-segura-1234567890}
mm.remember.days=${REMEMBER_DAYS:30}
# En prod detrás de HTTPS poné true (cookie "Secure")
mm.remember.secure=${REMEMBER_SECURE:false}

#mm.guard.disabled=true


# --- OAuth2 Client (Google) ---
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
# redirect-uri default de Spring: http://localhost:8080/login/oauth2/code/google

# (Opcional) Facebook - solo si lo configurás
#spring.security.oauth2.client.registration.facebook.client-id=${FB_CLIENT_ID:}
#spring.security.oauth2.client.registration.facebook.client-secret=${FB_CLIENT_SECRET:}
#spring.security.oauth2.client.registration.facebook.scope=public_profile,email


# H2 (perfil dev)
#spring.datasource.url=jdbc:h2:file:./.localdb/metamapa;DB_CLOSE_DELAY=-1;MODE=MySQL
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.hibernate.ddl-auto=update
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console


